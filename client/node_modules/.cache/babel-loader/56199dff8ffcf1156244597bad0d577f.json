{"ast":null,"code":"import axios from 'axios';\nimport { ORDER_LIST_MY_RESET, USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DETAIL_FAIL, USER_DETAIL_REQUEST, USER_DETAIL_RESET, USER_DETAIL_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_RESET, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS } from './actionTypes';\nexport const login = (email, password) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: USER_LOGIN_REQUEST\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const response = await axios.post('/api/users/login', {\n        email,\n        password\n      }, config);\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: response.data\n      });\n      localStorage.setItem('userInfo', JSON.stringify(response.data));\n    } catch (error) {\n      dispatch({\n        type: USER_LOGIN_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const logout = () => {\n  return dispatch => {\n    localStorage.removeItem('userInfo');\n    dispatch({\n      type: USER_LOGOUT\n    });\n    dispatch({\n      type: USER_DETAIL_RESET\n    });\n    dispatch({\n      type: ORDER_LIST_MY_RESET\n    });\n    dispatch({\n      type: USER_LIST_RESET\n    });\n  };\n};\nexport const register = (name, email, password) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: USER_REGISTER_REQUEST\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const response = await axios.post('/api/users', {\n        name,\n        email,\n        password\n      }, config);\n      dispatch({\n        type: USER_REGISTER_SUCCESS,\n        payload: response.data\n      });\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: response.data\n      });\n      localStorage.setItem('userInfo', JSON.stringify(response.data));\n    } catch (error) {\n      dispatch({\n        type: USER_REGISTER_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const getUserDetail = id => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: USER_DETAIL_REQUEST\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`\n        }\n      };\n      const response = await axios.get(`/api/users/${id}`, config);\n      dispatch({\n        type: USER_DETAIL_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: USER_DETAIL_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const updateUserProfile = user => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: USER_UPDATE_PROFILE_REQUEST\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`\n        }\n      };\n      const response = await axios.put(`/api/users/profile`, user, config);\n      dispatch({\n        type: USER_UPDATE_PROFILE_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: USER_UPDATE_PROFILE_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const listUsers = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: USER_LIST_REQUEST\n      });\n      const config = {\n        headers: {\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`\n        }\n      };\n      const response = await axios.get(`/api/users`, config);\n      dispatch({\n        type: USER_LIST_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: USER_LIST_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const deleteUser = id => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: USER_DELETE_REQUEST\n      });\n      const config = {\n        headers: {\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`\n        }\n      };\n      await axios.delete(`/api/users/${id}`, config);\n      dispatch({\n        type: USER_DELETE_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: USER_DELETE_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const updateUser = user => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: USER_UPDATE_REQUEST\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.put(`/api/users/${user._id}`, user, config);\n      dispatch({\n        type: USER_UPDATE_SUCCESS\n      });\n      dispatch({\n        type: USER_DETAIL_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: USER_UPDATE_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/Users/kishorelaxman/Documents/GitHub/Ecommerce-Artisans/client/src/store/actions/userActions.js"],"names":["axios","ORDER_LIST_MY_RESET","USER_DELETE_FAIL","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DETAIL_FAIL","USER_DETAIL_REQUEST","USER_DETAIL_RESET","USER_DETAIL_SUCCESS","USER_LIST_FAIL","USER_LIST_REQUEST","USER_LIST_RESET","USER_LIST_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","login","email","password","dispatch","type","config","headers","response","post","payload","data","localStorage","setItem","JSON","stringify","error","message","logout","removeItem","register","name","getUserDetail","id","getState","Authorization","userLogin","userInfo","token","get","updateUserProfile","user","put","listUsers","deleteUser","delete","updateUser","_id"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n  ORDER_LIST_MY_RESET,\n  USER_DELETE_FAIL,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DETAIL_FAIL,\n  USER_DETAIL_REQUEST,\n  USER_DETAIL_RESET,\n  USER_DETAIL_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_LIST_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from './actionTypes';\n\nexport const login = (email, password) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: USER_LOGIN_REQUEST });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      const response = await axios.post(\n        '/api/users/login',\n        { email, password },\n        config\n      );\n\n      dispatch({ type: USER_LOGIN_SUCCESS, payload: response.data });\n      localStorage.setItem('userInfo', JSON.stringify(response.data));\n    } catch (error) {\n      dispatch({\n        type: USER_LOGIN_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n};\n\nexport const logout = () => {\n  return (dispatch) => {\n    localStorage.removeItem('userInfo');\n    dispatch({ type: USER_LOGOUT });\n    dispatch({ type: USER_DETAIL_RESET });\n    dispatch({ type: ORDER_LIST_MY_RESET });\n    dispatch({ type: USER_LIST_RESET });\n  };\n};\n\nexport const register = (name, email, password) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: USER_REGISTER_REQUEST });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      const response = await axios.post(\n        '/api/users',\n        { name, email, password },\n        config\n      );\n\n      dispatch({ type: USER_REGISTER_SUCCESS, payload: response.data });\n      dispatch({ type: USER_LOGIN_SUCCESS, payload: response.data });\n      localStorage.setItem('userInfo', JSON.stringify(response.data));\n    } catch (error) {\n      dispatch({\n        type: USER_REGISTER_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n};\n\nexport const getUserDetail = (id) => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({ type: USER_DETAIL_REQUEST });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\n        },\n      };\n      const response = await axios.get(`/api/users/${id}`, config);\n\n      dispatch({ type: USER_DETAIL_SUCCESS, payload: response.data });\n    } catch (error) {\n      dispatch({\n        type: USER_DETAIL_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n};\n\nexport const updateUserProfile = (user) => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({ type: USER_UPDATE_PROFILE_REQUEST });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\n        },\n      };\n      const response = await axios.put(`/api/users/profile`, user, config);\n\n      dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: response.data });\n    } catch (error) {\n      dispatch({\n        type: USER_UPDATE_PROFILE_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n};\n\nexport const listUsers = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({ type: USER_LIST_REQUEST });\n      const config = {\n        headers: {\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\n        },\n      };\n      const response = await axios.get(`/api/users`, config);\n\n      dispatch({ type: USER_LIST_SUCCESS, payload: response.data });\n    } catch (error) {\n      dispatch({\n        type: USER_LIST_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n};\n\nexport const deleteUser = (id) => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({ type: USER_DELETE_REQUEST });\n      const config = {\n        headers: {\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\n        },\n      };\n      await axios.delete(`/api/users/${id}`, config);\n\n      dispatch({ type: USER_DELETE_SUCCESS });\n    } catch (error) {\n      dispatch({\n        type: USER_DELETE_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n};\n\nexport const updateUser = (user) => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({ type: USER_UPDATE_REQUEST });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\n        },\n      };\n      const { data } = await axios.put(`/api/users/${user._id}`, user, config);\n\n      dispatch({ type: USER_UPDATE_SUCCESS });\n      dispatch({ type: USER_DETAIL_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: USER_UPDATE_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}