{"ast":null,"code":"import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducer/rootReducer';\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {\n  address: '',\n  city: '',\n  postalCode: '',\n  country: ''\n};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\n\nconst configStore = () => {\n  const store = createStore(rootReducer(), initialState, composeWithDevTools(applyMiddleware(thunk))); // console.log(store.getState());\n\n  return store;\n};\n\nexport default configStore;","map":{"version":3,"sources":["D:/Web development/mern-ecommerce-master/mern-ecommerce-master/client/src/store/configStore.js"],"names":["applyMiddleware","createStore","composeWithDevTools","thunk","rootReducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","address","city","postalCode","country","initialState","cart","cartItems","shippingAddress","userLogin","userInfo","configStore","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,WAAP,MAAwB,uBAAxB;AAEA,MAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GAE/B;AAAEK,EAAAA,OAAO,EAAE,EAAX;AAAeC,EAAAA,IAAI,EAAE,EAArB;AAAyBC,EAAAA,UAAU,EAAE,EAArC;AAAyCC,EAAAA,OAAO,EAAE;AAAlD,CAFJ;AAIA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAEb,oBADP;AAEJc,IAAAA,eAAe,EAAER;AAFb,GADa;AAKnBS,EAAAA,SAAS,EAAE;AAAEC,IAAAA,QAAQ,EAAEX;AAAZ;AALQ,CAArB;;AAQA,MAAMY,WAAW,GAAG,MAAM;AACxB,QAAMC,KAAK,GAAGtB,WAAW,CACvBG,WAAW,EADY,EAEvBY,YAFuB,EAGvBd,mBAAmB,CAACF,eAAe,CAACG,KAAD,CAAhB,CAHI,CAAzB,CADwB,CAMxB;;AACA,SAAOoB,KAAP;AACD,CARD;;AAUA,eAAeD,WAAf","sourcesContent":["import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './reducer/rootReducer';\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : [];\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null;\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : { address: '', city: '', postalCode: '', country: '' };\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst configStore = () => {\n  const store = createStore(\n    rootReducer(),\n    initialState,\n    composeWithDevTools(applyMiddleware(thunk))\n  );\n  // console.log(store.getState());\n  return store;\n};\n\nexport default configStore;\n"]},"metadata":{},"sourceType":"module"}