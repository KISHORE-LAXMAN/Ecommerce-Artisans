{"ast":null,"code":"import axios from 'axios';\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from './actionTypes';\nexport const createOrder = order => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: ORDER_CREATE_REQUEST\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`\n        }\n      };\n      const response = await axios.post(`/api/orders`, order, config);\n      dispatch({\n        type: ORDER_CREATE_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: ORDER_CREATE_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const getOrderDetails = id => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: ORDER_DETAILS_REQUEST\n      });\n      const config = {\n        headers: {\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`\n        }\n      };\n      const response = await axios.get(`/api/orders/${id}`, config);\n      dispatch({\n        type: ORDER_DETAILS_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: ORDER_DETAILS_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const payOrder = (orderId, paymentResult) => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: ORDER_PAY_REQUEST\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`\n        }\n      };\n      const response = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n      dispatch({\n        type: ORDER_PAY_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: ORDER_PAY_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const deliverOrder = order => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: ORDER_DELIVER_REQUEST\n      });\n      const config = {\n        headers: {\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`\n        }\n      };\n      const response = await axios.put(`/api/orders/${order._id}/deliver`, {}, config);\n      dispatch({\n        type: ORDER_DELIVER_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: ORDER_DELIVER_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const listMyOrders = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: ORDER_LIST_MY_REQUEST\n      });\n      const config = {\n        headers: {\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`\n        }\n      };\n      const response = await axios.get(`/api/orders/myorders`, config);\n      dispatch({\n        type: ORDER_LIST_MY_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: ORDER_LIST_MY_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n};\nexport const listOrders = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: ORDER_LIST_REQUEST\n      });\n      const config = {\n        headers: {\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`\n        }\n      };\n      const response = await axios.get(`/api/orders`, config);\n      dispatch({\n        type: ORDER_LIST_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: ORDER_LIST_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/Users/kishorelaxman/Documents/GitHub/Ecommerce-Artisans/client/src/store/actions/orderActions.js"],"names":["axios","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_LIST_FAIL","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","createOrder","order","dispatch","getState","type","config","headers","Authorization","userLogin","userInfo","token","response","post","payload","data","error","message","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","deliverOrder","_id","listMyOrders","listOrders"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n} from './actionTypes';\n\nexport const createOrder = (order) => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({ type: ORDER_CREATE_REQUEST });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\n        },\n      };\n      const response = await axios.post(`/api/orders`, order, config);\n\n      dispatch({ type: ORDER_CREATE_SUCCESS, payload: response.data });\n    } catch (error) {\n      dispatch({\n        type: ORDER_CREATE_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n};\n\nexport const getOrderDetails = (id) => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({ type: ORDER_DETAILS_REQUEST });\n      const config = {\n        headers: {\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\n        },\n      };\n      const response = await axios.get(`/api/orders/${id}`, config);\n\n      dispatch({ type: ORDER_DETAILS_SUCCESS, payload: response.data });\n    } catch (error) {\n      dispatch({\n        type: ORDER_DETAILS_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n};\n\nexport const payOrder = (orderId, paymentResult) => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({ type: ORDER_PAY_REQUEST });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\n        },\n      };\n      const response = await axios.put(\n        `/api/orders/${orderId}/pay`,\n        paymentResult,\n        config\n      );\n\n      dispatch({ type: ORDER_PAY_SUCCESS, payload: response.data });\n    } catch (error) {\n      dispatch({\n        type: ORDER_PAY_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n};\n\nexport const deliverOrder = (order) => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({ type: ORDER_DELIVER_REQUEST });\n      const config = {\n        headers: {\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\n        },\n      };\n      const response = await axios.put(\n        `/api/orders/${order._id}/deliver`,\n        {},\n        config\n      );\n\n      dispatch({ type: ORDER_DELIVER_SUCCESS, payload: response.data });\n    } catch (error) {\n      dispatch({\n        type: ORDER_DELIVER_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n};\n\nexport const listMyOrders = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({ type: ORDER_LIST_MY_REQUEST });\n      const config = {\n        headers: {\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\n        },\n      };\n      const response = await axios.get(`/api/orders/myorders`, config);\n\n      dispatch({ type: ORDER_LIST_MY_SUCCESS, payload: response.data });\n    } catch (error) {\n      dispatch({\n        type: ORDER_LIST_MY_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n};\n\nexport const listOrders = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({ type: ORDER_LIST_REQUEST });\n      const config = {\n        headers: {\n          Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\n        },\n      };\n      const response = await axios.get(`/api/orders`, config);\n\n      dispatch({ type: ORDER_LIST_SUCCESS, payload: response.data });\n    } catch (error) {\n      dispatch({\n        type: ORDER_LIST_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}